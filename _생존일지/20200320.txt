-원래 하던일 - > 구글 안드로이드 수업 
 		-> Weather API를 듣다가 AsyncTask (비동기처리) 듣게 되었고
		-> AsyncTask는  Android에서 Precated 하는 클래스이며
		-> Kotlin 에서는 Coroutines을 사용한다고 한다.
		-> 간단한 날씨 앱을 만들기 위해선 Weather API가 필요한데
		-> AsyncTask 보다는 Coroutines이 좋을거 같아서 Coroutine을 찾고 있었다.
		-> Coroutine을 보면서 Annotation이 나와서 아직 뭔지 잘 몰라서
		-> Kotlin 문법을 다시 봐야겠다는 생각이 들었다.

-해야할 것 	
		1. Kotlin 문법 부터 완강하기 (계속 반복 필요하다 느낌) ->  Dimo 코틀린 
		2. 문법을 완성한 뒤 Coroutines + MVVM + ROOM 사용하는 DIMO 메모+ 날씨 예제 만들어보기 
		3. 완성 한 뒤 Retrofit + Coroutines + Gson Fetch  하는 예제 따라 해 보기 
		4. 그 뒤 다 시 구글 안드로이드 수업 들어보기


- 목적 		: REST (Representation State Transfer) API 사용에 익숙해져야 함
		앞으로 많은 API를 쓰게 될것 같아서
		비동기 처리를 좀 더 이해해 보는것이 필요하다고 느낌 
		

-새롭게 안 내용 : 		[Retrofit이란]
			AsyncTask,HttpUrlConnection을 사용해서 직접 네트워크 통신을 구현해야 한다.
				1. 네트워크 통신 연결/해제
				2. 가져온 데이터 파싱
				3. Json통신의 경우, Json데이터<-> Class 변환
				4. 각종 에러처리
			이 과정들은 좀 더 편리하게 해주는 외부 라이브러리 이다.



		 